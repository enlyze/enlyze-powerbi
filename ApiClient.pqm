let
    BaseUrl = "https://app.enlyze.com/api/v2",
    CommonHeaders = [
        #"Content-Type" = "application/json",
        #"user-agent" = "enlyze-powerbi/1.0.0"
    ],
    CreateHeaders = (apiToken as text) as record =>
        Record.Combine({CommonHeaders, [#"Authorization" = "Bearer " & apiToken]}),
    FetchPage = (apiPath as text, cursor as nullable text) =>
        let
            apiUrl = BaseUrl & apiPath,
            apiToken = Extension.CurrentCredential()[Key],
            url = if cursor = null then apiUrl else apiUrl & "?cursor=" & cursor,
            headers = CreateHeaders(apiToken),
            parsedResponse = Json.Document(Web.Contents(url, [Headers = headers]))
        in
            parsedResponse,
    FetchPaginated = (apiPath as text, cursor as nullable text) as list =>
        let
            currentPage = FetchPage(apiPath, cursor),
            nextCursor = currentPage[metadata][next_cursor],
            data = currentPage[data],
            remainingData = if nextCursor = null then {} else @FetchPaginated(apiPath, nextCursor)
        in
            List.Combine({data, remainingData}),
    PostRequest = (apiPath as text, body as any) as list =>
        let
            url = BaseUrl & apiPath,
            apiToken = Extension.CurrentCredential()[Key],
            headers = CreateHeaders(apiToken),
            response = Web.Contents(
                url,
                [
                    Headers = headers,
                    Content = Json.FromValue(body),
                    ManualStatusHandling = {400, 401, 403, 404, 422, 500}
                ]
            ),
            statusCode = Value.Metadata(response)[Response.Status],
            parsedResponse =
                if statusCode = 200 then
                    Json.Document(response)
                else
                    error "HTTP Error: " & Text.From(statusCode) & ". Response body: " & Text.FromBinary(response),
            data = parsedResponse[data]
        in
            data
in
    [
        FetchPaginated = FetchPaginated,
        PostRequest = PostRequest
    ]
